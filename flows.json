[
    {
        "id": "d9d7441f49f7ba2d",
        "type": "tab",
        "label": "IoT Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f8b5a3d2.0a2e78",
        "type": "mqtt in",
        "z": "d9d7441f49f7ba2d",
        "name": "MQTT",
        "topic": "iot_project/sensors/+/data",
        "qos": "0",
        "datatype": "json",
        "broker": "a5d9b8c1.4e0b7",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 50,
        "y": 140,
        "wires": [
            [
                "6f969af3ef527a71"
            ]
        ]
    },
    {
        "id": "d91b5e3c.8d0b9",
        "type": "function",
        "z": "d9d7441f49f7ba2d",
        "name": "Extract Temperature",
        "func": "msg.payload = msg.payload.temperature;  // or .humidity\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 100,
        "wires": [
            [
                "e1f7b8f6.0b7d3",
                "4276b30f12e82ea5"
            ]
        ]
    },
    {
        "id": "e1f7b8f6.0b7d3",
        "type": "ui_gauge",
        "z": "d9d7441f49f7ba2d",
        "name": "Temperature",
        "group": "e6f0c3e1.5c7c4",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp (Â°C)",
        "label": "",
        "format": "{{value}}",
        "min": "20",
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "25",
        "seg2": "35",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "c8e1f7a9.1d8d2",
        "type": "ui_gauge",
        "z": "d9d7441f49f7ba2d",
        "name": "Humidity",
        "group": "e6f0c3e1.5c7c4",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity (%)",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "30",
        "seg2": "70",
        "diff": false,
        "className": "",
        "x": 780,
        "y": 160,
        "wires": []
    },
    {
        "id": "104b375f6c8c2f16",
        "type": "function",
        "z": "d9d7441f49f7ba2d",
        "name": "Extract Humidity",
        "func": "msg.payload = msg.payload.humidity;  // or .humidity\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "e5f2bab94dcfe036",
                "c8e1f7a9.1d8d2"
            ]
        ]
    },
    {
        "id": "4276b30f12e82ea5",
        "type": "ui_chart",
        "z": "d9d7441f49f7ba2d",
        "name": "",
        "group": "e6f0c3e1.5c7c4",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Temp over Time",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e5f2bab94dcfe036",
        "type": "ui_chart",
        "z": "d9d7441f49f7ba2d",
        "name": "",
        "group": "e6f0c3e1.5c7c4",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Humidity over Time",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "20",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 810,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "62feebbf8e8bdf2d",
        "type": "function",
        "z": "d9d7441f49f7ba2d",
        "name": "Format for InfluxDB",
        "func": "const {\n    sensor_id,\n    temperature,\n    humidity,\n    timestamp\n} = msg.payload;\n\nmsg.payload = [\n    {\n        measurement: \"temperature\",\n        tags: { sensor_id },\n        fields: { value: parseFloat(temperature) },\n        timestamp: timestamp * 1_000_000_000\n    },\n    {\n        measurement: \"humidity\",\n        tags: { sensor_id },\n        fields: { value: parseFloat(humidity) },\n        timestamp: timestamp * 1_000_000_000\n    }\n];\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 140,
        "wires": [
            [
                "104b375f6c8c2f16",
                "d91b5e3c.8d0b9",
                "4215eb8d291c02c6"
            ]
        ]
    },
    {
        "id": "6f969af3ef527a71",
        "type": "function",
        "z": "d9d7441f49f7ba2d",
        "name": "Parse json",
        "func": "let payload = msg.payload;\nif (typeof payload === \"string\") {\n    payload = JSON.parse(payload);\n}\nmsg.payload = payload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 140,
        "wires": [
            [
                "62feebbf8e8bdf2d"
            ]
        ]
    },
    {
        "id": "4215eb8d291c02c6",
        "type": "influxdb batch",
        "z": "d9d7441f49f7ba2d",
        "influxdb": "faacdd1ca4686be2",
        "precision": "",
        "retentionPolicy": "",
        "name": "InfluxDB",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 560,
        "y": 280,
        "wires": []
    },
    {
        "id": "a5d9b8c1.4e0b7",
        "type": "mqtt-broker",
        "name": "Public MQTT",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e6f0c3e1.5c7c4",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "b2a9b7d8.0f8d5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "faacdd1ca4686be2",
        "type": "influxdb",
        "hostname": "localhost",
        "port": 8086,
        "protocol": "http",
        "database": "iot_data",
        "name": "Local InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "b2a9b7d8.0f8d5",
        "type": "ui_tab",
        "name": "IoT Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]